-- sheeshfn was here lol --
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "EKRA FREE | RIVALS | V1 | UNDETECTED", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

-- Visuals --
local VisualTab = Window:MakeTab({
    Name = "Visual",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Aimbot --
local AimTab = Window:MakeTab({
    Name = "Aimbot",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- User --
UserTab:AddToggle({
	Name = "Infinite Jump",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

AimTab:AddLabel("Silent-Aim")

-- aimbot
AimTab:AddButton({
	Name = "Rival Silent-Aim",
	Callback = function()
loadstring([[
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local silentAimEnabled = false
local fovRadius = 300 -- Larger FOV circle radius

-- Create FOV Circle
local fovCircle = Drawing.new("Circle")
fovCircle.Color = Color3.new(1, 0, 0) -- Red color
fovCircle.Thickness = 2
fovCircle.NumSides = 100
fovCircle.Radius = fovRadius
fovCircle.Filled = false
fovCircle.Transparency = 1

local function updateFovCircle()
local mousePos = UserInputService:GetMouseLocation()
fovCircle.Position = Vector2.new(mousePos.X, mousePos.Y)
end

local function inFov(target)
local screenPos, onScreen = Camera:WorldToScreenPoint(target.Position)
local mousePos = UserInputService:GetMouseLocation()
local distance = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
return distance <= fovRadius
end

local function getClosestTarget()
local closest, distance = nil, math.huge
for _, player in pairs(Players:GetPlayers()) do
if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
local mag = (LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
if mag < distance and inFov(player.Character.HumanoidRootPart) then
closest = player
distance = mag
end
end
end
return closest
end

local function silentAim()
local target = getClosestTarget()
if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
local targetPos = target.Character.HumanoidRootPart.Position
-- Adjust angles to ensure precision aiming
local hrp = LocalPlayer.Character.HumanoidRootPart
local direction = (targetPos - hrp.Position).Unit
local args = {
[1] = {
["Hit"] = target.Character.HumanoidRootPart,
["Origin"] = hrp.Position,
["Direction"] = direction,
}
}
game:GetService("ReplicatedStorage"):FindFirstChild("Fire"):InvokeServer(unpack(args))
end
end

UserInputService.InputBegan:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseButton2 then
silentAimEnabled = true
end
end)

UserInputService.InputEnded:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseButton2 then
silentAimEnabled = false
end
end)

RunService.RenderStepped:Connect(function()
updateFovCircle()
if silentAimEnabled then
silentAim()
end
end)
]])()
		print(Value)
	end    
})

VisualTab:AddLabel("Visuals For Aimbot + Others.")

VisualTab:AddButton({
	Name = "Chams - Visual",
	Callback = function()
	  loadstring([[
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local function applyChams(player)
for _, part in pairs(player.Character:GetChildren()) do
if part:IsA("BasePart") and not part:FindFirstChild("Cham") then
local cham = Instance.new("BoxHandleAdornment")
cham.Name = "Cham"
cham.Size = part.Size
cham.AlwaysOnTop = true
cham.ZIndex = 4
cham.Adornee = part
cham.Color3 = Color3.new(1, 0, 0) -- Red color for chams
cham.Transparency = 0.5
cham.Parent = part
end
end
end

local function updateESP()
for _, player in pairs(Players:GetPlayers()) do
if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
applyChams(player)
end
end
end

RunService.RenderStepped:Connect(function()
updateESP()
end)
]])()
      		print("button pressed")
  	end    
})

VisualTab:AddButton({
	Name = "Box - Visual",
	Callback = function()
	  loadstring([[
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local function createBox()
local box = Drawing.new("Square")
box.Visible = true
box.Thickness = 2
box.Color = Color3.new(1, 0, 0) -- Red color for boxes
box.Filled = false
return box
end

local boxes = {}

local function updateBox(player)
if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
local hrp = player.Character.HumanoidRootPart
local rootPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
local headPos = Camera:WorldToViewportPoint((player.Character.Head.Position + Vector3.new(0, 0.5, 0)))
local legPos = Camera:WorldToViewportPoint((player.Character.LeftLowerLeg.Position - Vector3.new(0, 1, 0)))

if onScreen then
local box = boxes[player] or createBox()
boxes[player] = box

box.Size = Vector2.new(1000 / rootPos.Z, headPos.Y - legPos.Y)
box.Position = Vector2.new(rootPos.X - box.Size.X / 2, rootPos.Y - box.Size.Y / 2)
box.Visible = true
else
if boxes[player] then
boxes[player].Visible = false
end
end
end
end

local function updateESP()
for _, player in pairs(Players:GetPlayers()) do
if player ~= LocalPlayer then
updateBox(player)
end
end
end

RunService.RenderStepped:Connect(function()
updateESP()
end)
]])()
      		print("button pressed")
  	end    
})

VisualTab:AddButton({
	Name = "Username - Visual",
	Callback = function()
	  loadstring([[
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local function createText()
local text = Drawing.new("Text")
text.Visible = true
text.Color = Color3.new(1, 1, 1) -- White color for text
text.Size = 20
text.Center = true
text.Outline = true
return text
end

local usernameTags = {}

local function updateUsernameTag(player)
if player.Character and player.Character:FindFirstChild("Head") then
local head = player.Character.Head
local headPos, onScreen = Camera:WorldToViewportPoint(head.Position + Vector3.new(0, 1.5, 0)) -- Position the text above the player's head

if onScreen then
local text = usernameTags[player] or createText()
usernameTags[player] = text

text.Position = Vector2.new(headPos.X, headPos.Y)
text.Text = player.Name
text.Visible = true
else
if usernameTags[player] then
usernameTags[player].Visible = false
end
end
end
end

local function updateESP()
for _, player in pairs(Players:GetPlayers()) do
if player ~= LocalPlayer then
updateUsernameTag(player)
end
end
end

RunService.RenderStepped:Connect(function()
updateESP()
end)
]])()
      		print("button pressed")
  	end    
})

VisualTab:AddButton({
	Name = "Tracers - Visual",
	Callback = function()
	  loadstring([[
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local function createTracer()
local tracer = Drawing.new("Line")
tracer.Visible = true
tracer.Thickness = 2
tracer.Color = Color3.new(1, 0, 0) -- Red color for tracers
return tracer
end

local tracers = {}

local function updateTracer(player)
if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
local hrp = player.Character.HumanoidRootPart
local hrpPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
local lpPos = Camera:WorldToViewportPoint(LocalPlayer.Character.HumanoidRootPart.Position)

if onScreen then
local tracer = tracers[player] or createTracer()
tracers[player] = tracer

tracer.From = Vector2.new(lpPos.X, lpPos.Y)
tracer.To = Vector2.new(hrpPos.X, hrpPos.Y)
tracer.Visible = true
else
if tracers[player] then
tracers[player].Visible = false
end
end
end
end

local function updateESP()
for _, player in pairs(Players:GetPlayers()) do
if player ~= LocalPlayer then
updateTracer(player)
end
end
end

RunService.RenderStepped:Connect(function()
updateESP()
end)
]])()
      		print("button pressed")
  	end    
})
